{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('span[data-days]');\nconst hoursEl = document.querySelector('span[data-hours]');\nconst minutesEl = document.querySelector('span[data-minutes]');\nconst secondsEl = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\nbuttonEl.addEventListener('click', handleTimer);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      buttonEl.disabled = true;\n    } else {\n      buttonEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction handleTimer() {\n  buttonEl.disabled = true;\n  inputEl.disabled = true;\n\n  const interval = setInterval(() => {\n    const currentTime = Date.now();\n    const countdown = userSelectedDate - currentTime;\n    const convert = convertMs(countdown);\n\n    setData(convert);\n\n    if (countdown <= 0) {\n      buttonEl.disabled = true;\n      inputEl.disabled = false;\n\n      clearInterval(interval);\n\n      setData({ days: '00', hours: '00', minutes: '00', seconds: '00' });\n      return;\n    }\n  }, 1000);\n}\n\nfunction setData({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = hours;\n  minutesEl.textContent = minutes;\n  secondsEl.textContent = seconds;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputEl","buttonEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","handleTimer","options","selectedDates","iziToast","flatpickr","interval","currentTime","countdown","convert","convertMs","setData","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EAE7D,IAAIC,EAEJL,EAAS,iBAAiB,QAASM,CAAW,EAE9C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAU,EAAUX,EAASQ,CAAO,EAE1B,SAASD,GAAc,CACrBN,EAAS,SAAW,GACpBD,EAAQ,SAAW,GAEnB,MAAMY,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAc,KAAK,MACnBC,EAAYR,EAAmBO,EAC/BE,EAAUC,EAAUF,CAAS,EAInC,GAFAG,EAAQF,CAAO,EAEXD,GAAa,EAAG,CAClBb,EAAS,SAAW,GACpBD,EAAQ,SAAW,GAEnB,cAAcY,CAAQ,EAEtBK,EAAQ,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,IAAI,CAAE,EACjE,MACD,CACF,EAAE,GAAI,CACT,CAEA,SAASA,EAAQ,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAClDnB,EAAO,YAAcgB,EACrBf,EAAQ,YAAcgB,EACtBf,EAAU,YAAcgB,EACxBf,EAAU,YAAcgB,CAC1B,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASP,EAAUQ,EAAI,CAMrB,MAAMN,EAAOI,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CL,EAAQG,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDJ,EAAUE,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEH,EAAUC,EACd,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EACE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}